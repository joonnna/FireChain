syntax = "proto3";

package blockchain;

message EntryHeader {
    bytes hash = 1;
}

message BlockEntry {
    bytes hash = 1;
    bytes content = 2;
}

message BlockHeader {
    bytes rootHash = 1;
    bytes prevHash = 2;
    uint64 blockNum = 3;
}

message BlockContent {
    bytes rootHash = 1;
    bytes prevHash = 2;
    repeated bytes content = 3;
    uint64 blockNum = 4;
}

message Signature {
    bytes r = 1;
    bytes s = 2;
}

message PeerState {
    string id = 1;
    repeated bytes entryHashes = 2;
    bytes rootHash = 3;
    bytes prevHash = 4;
    uint64 epoch = 5;
    Signature signature = 6;

	// Only for worm interaction
	// TODO solve this differently
	string httpAddr = 7;
}

message PeerInfo {
    string id = 1;
    uint64 epoch = 2;
    bytes rootHash = 3;
}


message State {
    map<string, PeerInfo> peers = 1;
    repeated bytes missingEntries = 2;
}

message StateResponse {
    repeated PeerState peers = 1;
    repeated BlockEntry entries = 2;
}

message ChainState {
    map<uint64, BlockHeader> blocks = 1;
}

message ChainContent {
    repeated BlockContent blocks = 1;
}

message WormPayload {
    map<uint64, BlockHeader> blocks = 1;
}
